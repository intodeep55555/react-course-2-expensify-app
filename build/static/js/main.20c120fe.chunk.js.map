{"version":3,"sources":["components/ExpenseListItem.js","selectors/expenses.js","components/ExpenseList.js","actions/filters.js","components/ExpenseListFilters.js","components/ExpensesSummary.js","selectors/expenses-total.js","components/ExpenseDashboardPage.js","components/ExpenseForm.js","firebase/firebase.js","components/AddExpensePage.js","actions/expenses.js","components/EditExpensePage.js","components/NotFoundPage.js","components/LoginPage.js","actions/auth.js","components/Header.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","serviceWorker.js","reducers/expenses.js","reducers/filters.js","reducers/auth.js","store/configureStore.js","index.js"],"names":["ExpenseListItem","_ref","id","description","amount","createdAt","react_default","a","createElement","Link","to","concat","numeral","format","moment","selectors_expenses","expenses","text","sortBy","startDate","endDate","filter","expense","createdAtMoment","startDateMatch","isSameOrBefore","endDateMatch","isSameOrAfter","textMatch","toLowerCase","includes","sort","b","connect","state","selectExpenses","filters","props","map","components_ExpenseListItem","Object","assign","key","setStartDate","type","setEndDate","ExpenseListFilters","calendarFocused","onDatesChange","_this","dispatch","onFocusChange","setState","_this2","this","value","onChange","e","arguments","length","undefined","setTextFilter","target","react_dates","focusedInput","showClearDates","numberOfMonth","isOutsideRange","React","Component","visibleExpenses","expenseCount","expensesTotal","reduce","sum","expenseWord","formattedExpensesTotal","ExpenseDashboardPage","components_ExpensesSummary","components_ExpenseListFilters","components_ExpenseList","ExpenseForm","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onDescriptionChange","onNoteChange","note","onAmountChange","match","onDateChange","focused","onSubmit","preventDefault","error","parseFloat","valueOf","toString","placeholder","autoFocus","date","numberOfMonths","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","googleAuthProvider","GoogleAuthProvider","AddExpensePage","_React$Component","_getPrototypeOf2","_len","args","Array","_key","apply","startAddExpense","history","push","inherits","createClass","ExpenseForm_ExpenseForm","expenseData","getState","uid","auth","_expenseData$descript","_expenseData$note","_expenseData$amount","_expenseData$createdA","ref","then","addExpense","objectSpread","EditExpensePage","startEditExpense","onRemove","startRemoveExpense","onClick","find","params","updates","update","editExpense","data","remove","removeExpense","NotFoundPage","startLogin","signInWithPopup","startLogout","signOut","NavLink","activeClassName","isAuthenticated","component","rest","objectWithoutProperties","Route","components_Header","Redirect","createHistory","AppRouter","Router","Switch","routers_PublicRoute","path","LoginPage","exact","routers_PrivateRoute","Boolean","window","location","hostname","expensesReducerDefaultState","expensesReducer","action","toConsumableArray","filtersReducerDefaultState","startOf","endOf","filtersReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","authReducer","applyMiddleware","thunk","jsx","es","routers_AppRouter","hasRendered","renderApp","ReactDOM","render","document","getElementById","onAuthStateChanged","user","once","snapshot","forEach","childSnapshot","val","setExpenses","pathname","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.20c120fe.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\nimport moment from 'moment';\nimport numeral from 'numeral';\n\n//props are injected from ExpenseList.js\nconst ExpenseListItem = ({ id, description, amount, createdAt}) => (\n  <div>\n    <Link to={`/edit/${id}`}>\n      <h3>{description}</h3>\n    </Link>\n    <p>\n      {numeral(amount/100).format('$0,0.00')}\n      -\n      {moment(createdAt).format('MMMM Do, YYYY')}\n    </p>\n\n  </div>\n);\n\nexport default ExpenseListItem;\n","import moment from 'moment';\n\n//Get visible expenses\nexport default (expenses,{text, sortBy, startDate, endDate})=>{\n  return expenses.filter((expense)=>{\n    const createdAtMoment = moment(expense.createdAt);\n    const startDateMatch = startDate ? startDate.isSameOrBefore(createdAtMoment,'day'): true ;\n    const endDateMatch = endDate ? endDate.isSameOrAfter(createdAtMoment,'day'): true ;\n    const textMatch = expense.description.toLowerCase().includes(text.toLowerCase());\n\n    return startDateMatch && endDateMatch && textMatch;\n  }).sort((a,b) => {\n    if (sortBy === 'date'){\n      return a.createdAt < b.createdAt ? 1 : -1;\n    }else if(sortBy === 'amount'){\n      return a.amount < b.amount ? 1: -1;\n    }\n  });\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ExpenseListItem from './ExpenseListItem';\nimport selectExpenses from '../selectors/expenses';\n\nconst ExpenseList = (props) => (\n  <div>\n    <h1>Expense List</h1>\n    {props.expenses.map((expense) => {\n      return <ExpenseListItem key={expense.id} {...expense} />\n    })}\n  </div>\n);\n\n/*combine redux created store(state) to\nreact props by using 'connect'*/\nconst mapStateToProps = (state) => {\n  return{\n    expenses: selectExpenses(state.expenses, state.filters)\n  };\n};\nexport default connect(mapStateToProps)(ExpenseList);\n","//actions for dispatching by redux\n//dispatched action goes to reducers\n\n//SET_TEXT_FILTER\nexport const setTextFilter = (text = '') => ({\n  type: 'SET_TEXT_FILTER',\n  text\n});\n//SORT_BY_DATE\nexport const sortByDate=() =>({\n  type: 'SORT_BY_DATE'\n});\n//SORT_BY_AMOUNT\nexport const sortByAmount=() =>({\n  type: 'SORT_BY_AMOUNT'\n});\n//SET_START_DATE\nexport const setStartDate =(startDate) => ({\n  type: 'SET_START_DATE',\n  startDate\n})\n//SET_END_DATE\nexport const setEndDate =(endDate) => ({\n  type: 'SET_END_DATE',\n  endDate\n})\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {DateRangePicker} from 'react-dates';\nimport {setTextFilter,sortByDate,sortByAmount,setStartDate,setEndDate} from '../actions/filters';//actions for redux dispatching\n\nclass ExpenseListFilters extends React.Component{\n  state={\n    calendarFocused: null\n  };\n  onDatesChange = ({startDate, endDate}) =>{\n    this.props.dispatch(setStartDate(startDate));\n    this.props.dispatch(setEndDate(endDate));\n  };\n  onFocusChange = (calendarFocused) =>{\n    this.setState(() => ({calendarFocused}));\n  }\n  render() {\n    return (\n      <div>\n        {/* text filtering */}\n        <input\n          type=\"text\"\n          value={this.props.filters.text}\n          onChange={(e) => {\n            this.props.dispatch(setTextFilter(e.target.value));\n          }}\n        />\n\n        {/* pulldown for sorting(sortBy is defined in reducer\n          filters.js : date of amount) */}\n        <select\n          value={this.props.filters.sortBy}\n          onChange={(e) => {\n            if(e.target.value === 'date'){\n              this.props.dispatch(sortByDate());\n            }else if (e.target.value==='amount'){\n              this.props.dispatch(sortByAmount());\n            }\n          }}\n        >\n          <option value=\"date\">Date</option>\n          <option value=\"amount\">Amount</option>\n        </select>\n        {/*The Calendar will show according the conditions below.*/}\n        <DateRangePicker\n          startDate = {this.props.filters.startDate}\n          endDate = {this.props.filters.endDate}\n          onDatesChange={this.onDatesChange}\n          focusedInput={this.state.calendarFocused}\n          onFocusChange={this.onFocusChange}\n          showClearDates={true}\n          numberOfMonth={1}\n          isOutsideRange={() => false}\n        />\n      </div>\n    )\n  }\n}\n\n/*combine redux created store(state) to\nreact props by using 'connect'*/\nconst mapStateToProps = (state) => {\n  return{\n    filters: state.filters\n  };\n};\nexport default connect(mapStateToProps)(ExpenseListFilters);\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport numeral from 'numeral';\nimport selectExpenses from '../selectors/expenses';\nimport selectExpensesTotal from '../selectors/expenses-total';\n\nexport const ExpensesSummary = ({expenseCount, expensesTotal}) => {\n  const expenseWord = expenseCount === 1 ? 'expense': 'expenses';\n  const formattedExpensesTotal = numeral(expensesTotal/100).format('$0,0.00');\n\n  return(\n    <div>\n      <h1>Viewing {expenseCount} {expenseWord} totalling {formattedExpensesTotal}</h1>\n    </div>\n  );\n};\n\n/*combine redux created store(state) to\nreact props by using 'connect'\n(In this case, ExpensesSummary can access to\n redux created states of 'expenses' and 'filters')\n*/\nconst mapStateToProps = (state) => {\n  const visibleExpenses = selectExpenses(state.expenses, state.filters);\n\n  return{\n    expenseCount:visibleExpenses.length,\n    expensesTotal:selectExpensesTotal(visibleExpenses)\n  }\n};\nexport default connect(mapStateToProps)(ExpensesSummary);\n","\n//Return Total Amount\nexport default (expenses) => {\n  return expenses\n    .map((expense) => expense.amount)\n    .reduce((sum, value) => sum + value, 0);\n};\n","import React from 'react';\nimport ExpenseList from './ExpenseList';\nimport ExpenseListFilters from './ExpenseListFilters';\nimport ExpensesSummary from './ExpensesSummary';\n\nconst ExpenseDashboardPage=()=>(\n  <div>\n    <ExpensesSummary />\n    <ExpenseListFilters />\n    <ExpenseList />\n  </div>\n);\nexport default ExpenseDashboardPage;\n","import React from 'react';\nimport moment from 'moment';\nimport {SingleDatePicker} from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css'\n\n//this is noraml react class(states and methods are defined in this class) without redux\nexport default class ExpenseForm extends React.Component{\n  constructor(props){\n    super(props); //Inherit props from the upper class\n    this.state = { //Set own statea\n      //If from AddExpense no date will be shown('') ,but from EditExpense\n      description: props.expense? props.expense.description: '',\n      note: props.expense? props.expense.note:'',\n      amount: props.expense? (props.expense.amount / 100).toString():'',\n      createdAt: props.expense? moment(props.expense.createdAt): moment(),\n      calendarFocused: false,\n      error: ''\n    };\n  }\n\n  onDescriptionChange =(e) => {\n    const description = e.target.value;\n    this.setState(() => ({description}));\n  };\n  onNoteChange=(e) =>{\n    const note = e.target.value;\n    this.setState(()=>({note}));\n  };\n  onAmountChange=(e)=>{\n    const amount = e.target.value;\n\n    //to understanfing go to 'regex101.com'\n    //In this case only enable '2 decimal number'\n    if(!amount || amount.match(/^\\d{1,}(\\.\\d{0,2})?$/)){\n      this.setState(() => ({amount}));\n    }\n  };\n  onDateChange = (createdAt) => {\n    if(createdAt){\n      this.setState(() => ({ createdAt }));\n    }\n  };\n  onFocusChange = ({ focused }) => {\n    this.setState(() => ({ calendarFocused: focused }));\n  };\n  onSubmit =(e) =>{\n    e.preventDefault();\n    //error handling in the case of no input in description and amount field\n    if(!this.state.description || !this.state.amount){\n      this.setState(()=>({error:'Please provide description and amount.'}));\n    }else{\n      this.setState(()=>({error: ''}));\n      this.props.onSubmit({\n        /*onSubmit prop is from AddExpensePage.js. and the contents(description, amount, ...)\n        will be returned to AddEpensePage by onSubmit Form.*/\n        description:this.state.description,\n        amount: parseFloat(this.state.amount, 10) * 100,\n        createdAt: this.state.createdAt.valueOf(),\n        note: this.state.note\n      });\n    }\n  };\n  render(){\n    return(\n      <div>\n        {this.state.error && <p>{this.state.error}</p>}\n        <form onSubmit={this.onSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"Description\"\n            autoFocus\n            value={this.state.description}\n            onChange={this.onDescriptionChange}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Amount\"\n            value = {this.state.amount}\n            onChange={this.onAmountChange}\n          />\n          <SingleDatePicker\n              date={this.state.createdAt}\n              onDateChange={this.onDateChange}\n              focused={this.state.calendarFocused}\n              onFocusChange={this.onFocusChange}\n              numberOfMonths={1}\n              isOutsideRange={() => false}\n            />\n\n          <textarea\n            placeholder=\"Add a note for your expense (optional)\"\n            value={this.state.note}\n            onChange={this.onNoteChange}\n          >\n          </textarea>\n          <button>Add Expense</button>\n        </form>\n      </div>\n    )\n  }\n}\n","import * as firebase from 'firebase';\n//Copied from firebase website\nconst config = {\n  apiKey: \"AIzaSyA3-FsSb4z7mqBern4xIO_GfOu36LMhnrw\",\n  authDomain: \"expensify-cbd4a.firebaseapp.com\",\n  databaseURL: \"https://expensify-cbd4a.firebaseio.com\",\n  projectId: \"expensify-cbd4a\",\n  storageBucket: \"expensify-cbd4a.appspot.com\",\n  messagingSenderId: \"105835213432\"\n};\nfirebase.initializeApp(config);\n\nconst database = firebase.database();\n//for google authentication\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport {firebase,googleAuthProvider, database as default};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ExpenseForm from './ExpenseForm';\nimport { startAddExpense } from '../actions/expenses';\n\n\nexport class AddExpensePage extends React.Component {\n  onSubmit = (expense) => {\n    this.props.startAddExpense(expense);\n    this.props.history.push('/');//optional: back to dashboard page\n  };\n  render() {\n    return (\n      <div>\n        <h1>Add Expense</h1>\n        {/*description, amount of expense will be returned from Expense Form*/}\n        <ExpenseForm\n          onSubmit={this.onSubmit}\n        />\n      </div>\n    );\n  }\n}\n\n//Enabling AddExpensePage accessing to redux 'props.dispatch'\nconst mapDispatchToProps = (dispatch) => ({\n  startAddExpense: (expense) => dispatch(startAddExpense(expense))\n});\nexport default connect(undefined, mapDispatchToProps)(AddExpensePage);\n","//actions for dispatching by redux\n//dispatched action goes to reducers\nimport uuid from 'uuid';\nimport database from '../firebase/firebase';\n\n//AddEXPENSE\n//changing REDUX STORE\nexport const addExpense = (expense) => ({\n  type:'ADD_EXPENSE',\n  expense\n});\nexport const startAddExpense = (expenseData = {}) => {\n  return (dispatch,getState) => {\n    const uid = getState().auth.uid;\n    const{\n      description='',\n      note='',\n      amount=0,\n      createdAt=0\n    } = expenseData;\n    const expense = {description, note, amount, createdAt};\n    //Update DB and then dispatch redux action\n    //(return for tossing data to following 'then')\n    return database.ref(`users/${uid}/expenses`).push(expense).then((ref)=>{\n      dispatch(addExpense({\n        id: ref.key,\n        ...expense\n      }));\n    });\n  }\n}\n//REMOVE_EXPENSE\nexport const removeExpense = ({id}={}) => ({\n  type:'REMOVE_EXPENSE',\n  id\n});\nexport const startRemoveExpense=({id} = {}) => {\n  return (dispatch,getState) => {\n    const uid = getState().auth.uid;\n    return database.ref(`users/${uid}/expenses/${id}`).remove().then(()=>{\n      dispatch(removeExpense({id}));\n    });\n  };\n};\n\n//EDIT_EXPENSE\nexport const editExpense=(id, updates) =>({\n  type:'EDIT_EXPENSE',\n  id,\n  updates\n});\nexport const startEditExpense = (id, updates) => {\n  return (dispatch,getState) => {\n    const uid = getState().auth.uid;\n    //below return for tossing data to 'then' in \"index.js\"\n    return database.ref(`users/${uid}/expenses/${id}`).update(updates).then(() => {\n      dispatch(editExpense(id, updates));\n    });\n  };\n};\n\n//SET_EXPENSES\nexport const setExpenses = (expenses) => ({\n  type: 'SET_EXPENSES',\n  expenses\n});\nexport const startSetExpenses = () =>{\n  return (dispatch, getState) => {\n    //below return for tossing data to 'then' in \"index.js\"\n    const uid = getState().auth.uid;\n    return database.ref(`users/${uid}/expenses`).once('value').then((snapshot) => {\n      const expenses = [];\n      snapshot.forEach((childSnapshot)=>{\n        expenses.push({\n          id: childSnapshot.key,\n          ...childSnapshot.val()\n        });\n      });\n      //set fetched data(from DB) to redux array\n      dispatch(setExpenses(expenses));\n    });\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ExpenseForm from './ExpenseForm';\nimport { startEditExpense, startRemoveExpense } from '../actions/expenses';\n\nexport class EditExpensePage extends React.Component {\n  onSubmit = (expense) => {\n\t//description, amount of expense will be returned from Expense Form\n    this.props.startEditExpense(this.props.expense.id, expense);\n    this.props.history.push('/');\n  };\n  onRemove = () => {\n    this.props.startRemoveExpense({ id: this.props.expense.id });\n    this.props.history.push('/');\n  };\n  render() {\n    return (\n      <div>\n        <ExpenseForm\n          expense={this.props.expense}\n          onSubmit={this.onSubmit}\n        />\n        <button onClick={this.onRemove}>Remove</button>\n      </div>\n    );\n  }\n};\n\n//Margin selelcted expense sates(descriotion, amount...) to EditExpense's props\nconst mapStateToProps = (state, props) => ({\n  expense: state.expenses.find((expense) => expense.id === props.match.params.id)\n});\nconst mapDispatchToProps = (dispatch, props) => ({\n  startEditExpense: (id, expense) => dispatch(startEditExpense(id, expense)),\n  startRemoveExpense: (data) => dispatch(startRemoveExpense(data))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(EditExpensePage);\n/*If only for connecting dispatch from redux without any other state,\nthen no need to connecting mapStateToProps*/\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst NotFoundPage=()=>(\n  <div>\n    {/* function of react router */}\n    404! - <Link to=\"/\">Go Home</Link>\n  </div>\n);\n\nexport default NotFoundPage;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {startLogin} from '../actions/auth';\n\nexport const LoginPage = ({startLogin}) =>(\n  <div>\n    <button onClick={startLogin}>Login</button>\n  </div>\n);\n\n//enabling dispatch 'startlogin' from auth, when clicking Login button of LoginPage\nconst mapDispatchToProps = (dispatch) => ({\n  startLogin: () => dispatch(startLogin())\n});\nexport default connect(undefined, mapDispatchToProps)(LoginPage);\n","import {firebase, googleAuthProvider} from '../firebase/firebase';\n\nexport const login = (uid) => ({\n  type: 'LOGIN',\n  uid\n});\n\nexport const startLogin = () => {\n  return () => {\n    return firebase.auth().signInWithPopup(googleAuthProvider);\n  };\n};\n\nexport const logout =() => ({\n  type: 'LOGOUT',\n});\n\nexport const startLogout = () => {\n  return () => {\n    return firebase.auth().signOut();\n  };\n};\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {startLogout} from '../actions/auth';\n\nexport const Header = ({startLogout}) =>(\n  <header>\n    <h1>Expensify</h1>\n    {/*for NavBar, it is styled in _base_scss*/}\n    <NavLink to=\"/dashboard\" activeClassName=\"is-active\">Dashboard</NavLink>\n    <NavLink to=\"/create\" activeClassName=\"is-active\" >Create Expense</NavLink>\n    <button onClick={startLogout}>Logout</button>\n  </header>\n);\n\n//connect dispatch with Header\nconst mapDispatchToProps = (dispatch) => ({\n  startLogout: () => dispatch(startLogout())\n});\nexport default connect(undefined, mapDispatchToProps)(Header);\n","//Login page and main page sepertion\n\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {Route,Redirect} from 'react-router-dom';\nimport Header from '../components/Header';\n\nexport const PrivateRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n})=>(\n  <Route {...rest} component={(props)=>(\n    isAuthenticated ? (\n      <div>\n        <Header />\n        <Component {...props} />\n      </div>\n    ): (\n      <Redirect to=\"/\" />\n    )\n  )}/>\n)\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: !!state.auth.uid\n});\nexport default connect(mapStateToProps)(PrivateRoute);\n","//Login page and main page sepertion\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {Route,Redirect} from 'react-router-dom';\n\nexport const PublicRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n})=>(\n  <Route {...rest} component={(props) => (\n    isAuthenticated ? (\n      <Redirect to=\"/dashboard\" />\n    ): (\n      <Component {...props} />\n    )\n  )} />\n)\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: !!state.auth.uid\n});\nexport default connect(mapStateToProps)(PublicRoute);\n","import React from 'react';\nimport {Router,Route,Switch,Link,NavLink} from 'react-router-dom';\nimport createHistory from 'history/createBrowserHistory';\nimport ExpenseDashboardPage from '../components/ExpenseDashboardPage';\nimport AddExpensePage from '../components/AddExpensePage';\nimport EditExpensePage from '../components/EditExpensePage';\nimport NotFoundPage from '../components/NotFoundPage';\nimport LoginPage from '../components/LoginPage';\nimport PrivateRoute from './PrivateRoute';\nimport PublicRoute from './PublicRoute';\n\nexport const history = createHistory();\n\nconst AppRouter= () => (\n  <Router history={history}>\n    <div>\n      <Switch>\n        <PublicRoute path=\"/\" component={LoginPage} exact={true} />\n        <PrivateRoute path=\"/dashboard\" component={ExpenseDashboardPage} exact={true}/>\n        <PrivateRoute path=\"/create\" component={AddExpensePage}/>\n        {/* id is defined in typed URL and passed to the props of EditExpensePage */}\n        <PrivateRoute path=\"/edit/:id\" component={EditExpensePage}/>\n        <Route component={NotFoundPage}/>\n      </Switch>\n    </div>\n  </Router>\n);\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","//Expenses Reducer\nconst expensesReducerDefaultState = [];\n\nconst expensesReducer = (state = expensesReducerDefaultState, action) => {\n  switch (action.type){\n    case 'ADD_EXPENSE':\n      return [\n        ...state,\n        action.expense\n      ];\n      case 'REMOVE_EXPENSE':\n        return state.filter(({id}) => id!==action.id);\n      case 'EDIT_EXPENSE':\n        return state.map((expense) => {\n          if(expense.id === action.id){\n            return{\n              ...expense,\n              ...action.updates //replace expense object with updates\n            }\n          }else{\n            return expense;\n          }\n        });\n    //Fetching Data from DB\n    case 'SET_EXPENSES':\n      return action.expenses;\n    default:\n      return state;\n  }\n};\n\nexport default expensesReducer;\n","import moment from 'moment';\n\n//Filters Reducer\nconst filtersReducerDefaultState = {\n  text: '',\n  sortBy: 'date', //date or amount\n  startDate: moment().startOf('month'),\n  endDate: moment().endOf('month')\n};\n\nconst filtersReducer = (state = filtersReducerDefaultState, action) => {\n  switch(action.type){\n    case 'SET_TEXT_FILTER':\n      return{\n        ...state,\n        text:action.text\n      };\n    case 'SORT_BY_AMOUNT':\n      return{\n        ...state,\n        sortBy: 'amount'\n      };\n    case 'SORT_BY_DATE':\n      return{\n        ...state,\n        sortBy: 'date'\n      };\n    case 'SET_START_DATE':\n      return{\n        ...state,\n        startDate: action.startDate\n      };\n    case 'SET_END_DATE':\n      return{\n        ...state,\n        endDate: action.endDate\n      };\n    default:\n    return state;\n  }\n};\n\nexport default filtersReducer;\n","export default (state = {},action) =>{\n  switch(action.type){\n    case 'LOGIN':\n      return{\n        uid: action.uid\n      };\n    case 'LOGOUT':\n      return {};\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport expensesReducer from '../reducers/expenses';\nimport filtersReducer from '../reducers/filters';\nimport authReducer from '../reducers/auth';\n\n//This is for redux dev tool(in CHROME)\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n//Store Creation\nexport default () => {\n  const store = createStore(\n    combineReducers({\n      expenses: expensesReducer,\n      filters: filtersReducer,\n      auth: authReducer\n    }),\n    composeEnhancers(applyMiddleware(thunk))\n  );\n  return store;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport AppRouter,{history} from './routers/AppRouter';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/styles.scss';\n\n//Manipulate Expenses and filters and Showing the results\nimport {startSetExpenses} from './actions/expenses';\nimport {login, logout} from './actions/auth';\nimport getVisibleExpenses from './selectors/expenses';\n\n//import FireBase\nimport {firebase} from './firebase/firebase';\n\n//combining REDUX\nimport configureStore from './store/configureStore';\nconst store = configureStore();\n\n//This is for providing react props with redux created store.\n//Then, connect them like what 'ExpenseList.js' does.\nconst jsx = (\n  <Provider store={store}>\n    <AppRouter/>\n  </Provider>\n);\n\nlet hasRendered = false;\nconst renderApp = () => {\n  if(!hasRendered){\n    ReactDOM.render(jsx, document.getElementById('root'));\n    hasRendered = true;\n  }\n}\n\nReactDOM.render(<p>Loading...</p>, document.getElementById('root'));\n\n//login logout directiing\nfirebase.auth().onAuthStateChanged((user)=>{\n  if(user){\n    //If fectching data from DB succeeded, then render page page.\n    store.dispatch(login(user.uid));\n    store.dispatch(startSetExpenses()).then(() => {\n      renderApp();\n      //if you are in login page then\n      if(history.location.pathname === '/'){\n        history.push('/dashboard');\n      }\n    });\n  //if login fails\n  }else{\n    store.dispatch(logout());\n    renderApp();\n    history.push('/'); //direct to login page('/' defined in AppRouter.js)\n  }\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}