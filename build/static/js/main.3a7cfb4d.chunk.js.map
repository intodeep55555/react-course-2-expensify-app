{"version":3,"sources":["components/ExpenseListItem.js","selectors/expenses.js","components/ExpenseList.js","components/ExpenseListFilters.js","actions/filters.js","components/ExpensesSummary.js","selectors/expenses-total.js","components/ExpenseDashboardPage.js","components/ExpenseForm.js","firebase/firebase.js","components/AddExpensePage.js","actions/expenses.js","components/EditExpensePage.js","components/NotFoundPage.js","components/LoginPage.js","actions/auth.js","components/Header.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","serviceWorker.js","components/LoadingPage.js","reducers/expenses.js","reducers/filters.js","reducers/auth.js","store/configureStore.js","index.js"],"names":["ExpenseListItem","_ref","id","description","amount","createdAt","react_default","a","createElement","Link","className","to","concat","moment","format","numeral","selectors_expenses","expenses","text","sortBy","startDate","endDate","filter","expense","createdAtMoment","startDateMatch","isSameOrBefore","endDateMatch","isSameOrAfter","textMatch","toLowerCase","includes","sort","b","connect","state","selectExpenses","filters","props","length","map","components_ExpenseListItem","Object","assign","key","ExpenseListFilters","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","calendarFocused","onDatesChange","setStartDate","setEndDate","onFocusChange","setState","onTextChange","e","setTextFilter","target","value","onSortChange","sortByDate","sortByAmount","inherits","createClass","type","placeholder","onChange","react_dates","focusedInput","showClearDates","numberOfMonths","isOutsideRange","React","Component","dispatch","undefined","visibleExpenses","expenseCount","expensesTotal","reduce","sum","expenseWord","formattedExpensesTotal","ExpenseDashboardPage","components_ExpensesSummary","components_ExpenseListFilters","components_ExpenseList","ExpenseForm","onDescriptionChange","onNoteChange","note","onAmountChange","match","onDateChange","focused","onSubmit","preventDefault","error","parseFloat","valueOf","toString","autoFocus","date","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","googleAuthProvider","GoogleAuthProvider","AddExpensePage","startAddExpense","history","push","ExpenseForm_ExpenseForm","expenseData","getState","uid","auth","_expenseData$descript","_expenseData$note","_expenseData$amount","_expenseData$createdA","ref","then","addExpense","objectSpread","EditExpensePage","startEditExpense","onRemove","startRemoveExpense","onClick","find","params","updates","update","editExpense","data","remove","removeExpense","NotFoundPage","startLogin","signInWithPopup","startLogout","signOut","isAuthenticated","component","rest","objectWithoutProperties","Route","components_Header","Redirect","createHistory","AppRouter","Router","Switch","routers_PublicRoute","path","LoginPage","exact","routers_PrivateRoute","Boolean","window","location","hostname","LoadingPage","src","expensesReducerDefaultState","expensesReducer","action","toConsumableArray","filtersReducerDefaultState","startOf","endOf","filtersReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","authReducer","applyMiddleware","thunk","jsx","es","routers_AppRouter","hasRendered","renderApp","ReactDOM","render","document","getElementById","components_LoadingPage","onAuthStateChanged","user","once","snapshot","forEach","childSnapshot","val","setExpenses","pathname","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3a7cfb4d.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\nimport moment from 'moment';\nimport numeral from 'numeral';\n\n//props are injected from ExpenseList.js\nconst ExpenseListItem = ({ id, description, amount, createdAt}) => (\n  <Link className=\"list-item\" to={`/edit/${id}`}>\n    <div>\n      <h3 className=\"list-item__title\">{description}</h3>\n      <span className=\"list-item__sub-title\">{moment(createdAt).format('MMMM Do, YYYY')}</span>\n    </div>\n    <h3 className=\"list-item__data\">{numeral(amount/100).format('$0,0.00')}</h3>\n  </Link>\n);\n\nexport default ExpenseListItem;\n","import moment from 'moment';\n\n//Get visible expenses\nexport default (expenses,{text, sortBy, startDate, endDate})=>{\n  return expenses.filter((expense)=>{\n    const createdAtMoment = moment(expense.createdAt);\n    const startDateMatch = startDate ? startDate.isSameOrBefore(createdAtMoment,'day'): true ;\n    const endDateMatch = endDate ? endDate.isSameOrAfter(createdAtMoment,'day'): true ;\n    const textMatch = expense.description.toLowerCase().includes(text.toLowerCase());\n\n    return startDateMatch && endDateMatch && textMatch;\n  }).sort((a,b) => {\n    if (sortBy === 'date'){\n      return a.createdAt < b.createdAt ? 1 : -1;\n    }else if(sortBy === 'amount'){\n      return a.amount < b.amount ? 1: -1;\n    }\n  });\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ExpenseListItem from './ExpenseListItem';\nimport selectExpenses from '../selectors/expenses';\n\nexport const ExpenseList = (props) => (\n  <div className=\"content-container\">\n    <div className=\"list-header\">\n      <div className=\"show-for-mobile\">Expenses</div>\n      <div className=\"show-for-desktop\">Expense</div>\n      <div className=\"show-for-desktop\">Amount</div>\n    </div>\n    <div className=\"list-body\">\n      {\n        props.expenses.length === 0 ? (\n          <div className=\"list-item list-item--message\">\n            <span>No expenses</span>\n          </div>\n        ) : (\n            props.expenses.map((expense) => {\n              return <ExpenseListItem key={expense.id} {...expense} />;\n            })\n          )\n      }\n    </div>\n  </div>\n);\n\nconst mapStateToProps = (state) => {\n  return {\n    expenses: selectExpenses(state.expenses, state.filters)\n  };\n};\n\nexport default connect(mapStateToProps)(ExpenseList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { DateRangePicker } from 'react-dates';\nimport { setTextFilter, sortByDate, sortByAmount, setStartDate, setEndDate } from '../actions/filters';\n\nexport class ExpenseListFilters extends React.Component {\n  state = {\n    calendarFocused: null\n  };\n  onDatesChange = ({ startDate, endDate }) => {\n    this.props.setStartDate(startDate);\n    this.props.setEndDate(endDate);\n  };\n  onFocusChange = (calendarFocused) => {\n    this.setState(() => ({ calendarFocused }));\n  }\n  onTextChange = (e) => {\n    this.props.setTextFilter(e.target.value);\n  };\n  onSortChange = (e) => {\n    if (e.target.value === 'date') {\n      this.props.sortByDate();\n    } else if (e.target.value === 'amount') {\n      this.props.sortByAmount();\n    }\n  };\n  render() {\n    return (\n      <div className=\"content-container\">\n        <div className=\"input-group\">\n          <div className=\"input-group__item\">\n            <input\n              type=\"text\"\n              className=\"text-input\"\n              placeholder=\"Search expenses\"\n              value={this.props.filters.text}\n              onChange={this.onTextChange}\n            />\n          </div>\n          <div className=\"input-group__item\">\n            <select\n              className=\"select\"\n              value={this.props.filters.sortBy}\n              onChange={this.onSortChange}\n            >\n              {/* text filtering */}\n              {/* pulldown for sorting(sortBy is defined in reducer\n                filters.js : date of amount) */}\n              <option value=\"date\">Date</option>\n              <option value=\"amount\">Amount</option>\n            </select>\n          </div>\n          <div className=\"input-group__item\">\n            {/*The Calendar will show according the conditions below.*/}\n            <DateRangePicker\n              startDate={this.props.filters.startDate}\n              endDate={this.props.filters.endDate}\n              onDatesChange={this.onDatesChange}\n              focusedInput={this.state.calendarFocused}\n              onFocusChange={this.onFocusChange}\n              showClearDates={true}\n              numberOfMonths={1}\n              isOutsideRange={() => false}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\n\n/*combine redux created store(state) to\nreact props by using 'connect'*/\nconst mapStateToProps = (state) => ({\n  filters: state.filters\n});\nconst mapDispatchToProps = (dispatch) => ({\n  setTextFilter: (text) => dispatch(setTextFilter(text)),\n  sortByDate: () => dispatch(sortByDate()),\n  sortByAmount: () => dispatch(sortByAmount()),\n  setStartDate: (startDate) => dispatch(setStartDate(startDate)),\n  setEndDate: (endDate) => dispatch(setEndDate(endDate))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseListFilters);\n","//actions for dispatching by redux\n//dispatched action goes to reducers\n\n//SET_TEXT_FILTER\nexport const setTextFilter = (text = '') => ({\n  type: 'SET_TEXT_FILTER',\n  text\n});\n//SORT_BY_DATE\nexport const sortByDate=() =>({\n  type: 'SORT_BY_DATE'\n});\n//SORT_BY_AMOUNT\nexport const sortByAmount=() =>({\n  type: 'SORT_BY_AMOUNT'\n});\n//SET_START_DATE\nexport const setStartDate =(startDate) => ({\n  type: 'SET_START_DATE',\n  startDate\n})\n//SET_END_DATE\nexport const setEndDate =(endDate) => ({\n  type: 'SET_END_DATE',\n  endDate\n})\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport numeral from 'numeral';\nimport selectExpenses from '../selectors/expenses';\nimport selectExpensesTotal from '../selectors/expenses-total';\n\nexport const ExpensesSummary = ({expenseCount, expensesTotal}) => {\n  const expenseWord = expenseCount === 1 ? 'expense': 'expenses';\n  const formattedExpensesTotal = numeral(expensesTotal/100).format('$0,0.00');\n\n  return(\n    <div className=\"page-header\">\n      <div className=\"content-container\">\n        <h1 className=\"page-header__title\">\n          Viewing <span>{expenseCount}</span> {expenseWord} totalling <span>{formattedExpensesTotal}</span>\n        </h1>\n        <div className=\"page-header__actions\">\n          <Link className=\"button\" to=\"/create\">Add Expense</Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n/*combine redux created store(state) to\nreact props by using 'connect'\n(In this case, ExpensesSummary can access to\n redux created states of 'expenses' and 'filters')\n*/\nconst mapStateToProps = (state) => {\n  const visibleExpenses = selectExpenses(state.expenses, state.filters);\n\n  return{\n    expenseCount:visibleExpenses.length,\n    expensesTotal:selectExpensesTotal(visibleExpenses)\n  }\n};\nexport default connect(mapStateToProps)(ExpensesSummary);\n","\n//Return Total Amount\nexport default (expenses) => {\n  return expenses\n    .map((expense) => expense.amount)\n    .reduce((sum, value) => sum + value, 0);\n};\n","import React from 'react';\nimport ExpenseList from './ExpenseList';\nimport ExpenseListFilters from './ExpenseListFilters';\nimport ExpensesSummary from './ExpensesSummary';\n\nconst ExpenseDashboardPage=()=>(\n  <div>\n    <ExpensesSummary />\n    <ExpenseListFilters />\n    <ExpenseList />\n  </div>\n);\nexport default ExpenseDashboardPage;\n","import React from 'react';\nimport moment from 'moment';\nimport {SingleDatePicker} from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css'\n\n//this is noraml react class(states and methods are defined in this class) without redux\nexport default class ExpenseForm extends React.Component{\n  constructor(props){\n    super(props); //Inherit props from the upper class\n    this.state = { //Set own statea\n      //If from AddExpense no date will be shown('') ,but from EditExpense\n      description: props.expense? props.expense.description: '',\n      note: props.expense? props.expense.note:'',\n      amount: props.expense? (props.expense.amount / 100).toString():'',\n      createdAt: props.expense? moment(props.expense.createdAt): moment(),\n      calendarFocused: false,\n      error: ''\n    };\n  }\n\n  onDescriptionChange =(e) => {\n    const description = e.target.value;\n    this.setState(() => ({description}));\n  };\n  onNoteChange=(e) =>{\n    const note = e.target.value;\n    this.setState(()=>({note}));\n  };\n  onAmountChange=(e)=>{\n    const amount = e.target.value;\n\n    //to understanfing go to 'regex101.com'\n    //In this case only enable '2 decimal number'\n    if(!amount || amount.match(/^\\d{1,}(\\.\\d{0,2})?$/)){\n      this.setState(() => ({amount}));\n    }\n  };\n  onDateChange = (createdAt) => {\n    if(createdAt){\n      this.setState(() => ({ createdAt }));\n    }\n  };\n  onFocusChange = ({ focused }) => {\n    this.setState(() => ({ calendarFocused: focused }));\n  };\n  onSubmit =(e) =>{\n    e.preventDefault();\n    //error handling in the case of no input in description and amount field\n    if(!this.state.description || !this.state.amount){\n      this.setState(()=>({error:'Please provide description and amount.'}));\n    }else{\n      this.setState(()=>({error: ''}));\n      this.props.onSubmit({\n        /*onSubmit prop is from AddExpensePage.js.\n        this is dispatch action adding below parameter to redux store*/\n        description:this.state.description,\n        amount: parseFloat(this.state.amount, 10) * 100,\n        createdAt: this.state.createdAt.valueOf(),\n        note: this.state.note\n      });\n    }\n  };\n  render(){\n    return(\n      <form className=\"form\" onSubmit={this.onSubmit}>\n      {this.state.error && <p className=\"form__error\">{this.state.error}</p>}\n        <input\n          type=\"text\"\n          placeholder=\"Description\"\n          autoFocus\n          className=\"text-input\"\n          value={this.state.description}\n          onChange={this.onDescriptionChange}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Amount\"\n          className=\"text-input\"\n          value = {this.state.amount}\n          onChange={this.onAmountChange}\n        />\n        <SingleDatePicker\n            date={this.state.createdAt}\n            onDateChange={this.onDateChange}\n            focused={this.state.calendarFocused}\n            onFocusChange={this.onFocusChange}\n            numberOfMonths={1}\n            isOutsideRange={() => false}\n          />\n\n        <textarea\n          placeholder=\"Add a note for your expense (optional)\"\n          className=\"textarea\"\n          value={this.state.note}\n          onChange={this.onNoteChange}\n        >\n        </textarea>\n        <div>\n          <button className=\"button\">Save Expense</button>\n        </div>\n      </form>\n    )\n  }\n}\n","import * as firebase from 'firebase';\n//Copied from firebase website\nconst config = {\n  apiKey: \"AIzaSyA3-FsSb4z7mqBern4xIO_GfOu36LMhnrw\",\n  authDomain: \"expensify-cbd4a.firebaseapp.com\",\n  databaseURL: \"https://expensify-cbd4a.firebaseio.com\",\n  projectId: \"expensify-cbd4a\",\n  storageBucket: \"expensify-cbd4a.appspot.com\",\n  messagingSenderId: \"105835213432\"\n};\nfirebase.initializeApp(config);\n\nconst database = firebase.database();\n//for google authentication\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport {firebase,googleAuthProvider, database as default};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ExpenseForm from './ExpenseForm';\nimport { startAddExpense } from '../actions/expenses';\n\nexport class AddExpensePage extends React.Component {\n  onSubmit = (expense) => {\n    this.props.startAddExpense(expense);//Enabled dispatching redux action by 'connect' below\n    this.props.history.push('/');//optional: back to dashboard page\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"page-header\">\n          <div className=\"content-container\">\n            <h1 className=\"page-header__title\">Add Expense</h1>\n          </div>\n        </div>\n        <div className=\"content-container\">\n          {/*description, amount of expense will be returned from Expense Form*/}\n          <ExpenseForm\n            onSubmit={this.onSubmit}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\n//Enabling AddExpensePage accessing to redux 'props.dispatch'\nconst mapDispatchToProps = (dispatch) => ({\n  startAddExpense: (expense) => dispatch(startAddExpense(expense))\n});\nexport default connect(undefined, mapDispatchToProps)(AddExpensePage);\n","//actions for dispatching by redux\n//dispatched action goes to reducers\n//import uuid from 'uuid';\nimport database from '../firebase/firebase';\n\n//AddEXPENSE\n//changing REDUX STORE\nexport const addExpense = (expense) => ({\n  type:'ADD_EXPENSE',\n  expense\n});\nexport const startAddExpense = (expenseData = {}) => {\n  return (dispatch,getState) => {\n    const uid = getState().auth.uid;\n    const{\n      description='',\n      note='',\n      amount=0,\n      createdAt=0\n    } = expenseData;\n    const expense = {description, note, amount, createdAt};\n    //Update DB and then dispatch redux action\n    //(return for tossing data to following 'then')\n    return database.ref(`users/${uid}/expenses`).push(expense).then((ref)=>{\n      dispatch(addExpense({\n        id: ref.key,\n        ...expense\n      }));\n    });\n  }\n}\n//REMOVE_EXPENSE\nexport const removeExpense = ({id}={}) => ({\n  type:'REMOVE_EXPENSE',\n  id\n});\nexport const startRemoveExpense=({id} = {}) => {\n  return (dispatch,getState) => {\n    const uid = getState().auth.uid;\n    return database.ref(`users/${uid}/expenses/${id}`).remove().then(()=>{\n      dispatch(removeExpense({id}));\n    });\n  };\n};\n\n//EDIT_EXPENSE\nexport const editExpense=(id, updates) =>({\n  type:'EDIT_EXPENSE',\n  id,\n  updates\n});\nexport const startEditExpense = (id, updates) => {\n  return (dispatch,getState) => {\n    const uid = getState().auth.uid;\n    //below return for tossing data to 'then' in \"index.js\"\n    return database.ref(`users/${uid}/expenses/${id}`).update(updates).then(() => {\n      dispatch(editExpense(id, updates));\n    });\n  };\n};\n\n//SET_EXPENSES\nexport const setExpenses = (expenses) => ({\n  type: 'SET_EXPENSES',\n  expenses\n});\nexport const startSetExpenses = () =>{\n  return (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    //below return for tossing data to 'then' in \"index.js\"\n    return database.ref(`users/${uid}/expenses`).once('value').then((snapshot) => {\n      const expenses = [];\n      snapshot.forEach((childSnapshot)=>{\n        expenses.push({\n          id: childSnapshot.key,\n          ...childSnapshot.val()\n        });\n      });\n      //set fetched data(from DB) to redux array\n      dispatch(setExpenses(expenses));\n    });\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ExpenseForm from './ExpenseForm';\nimport { startEditExpense, startRemoveExpense } from '../actions/expenses';\n\nexport class EditExpensePage extends React.Component {\n  onSubmit = (expense) => {\n\t//description, amount of expense will be returned from Expense Form\n    this.props.startEditExpense(this.props.expense.id, expense);\n    this.props.history.push('/');\n  };\n  onRemove = () => {\n    this.props.startRemoveExpense({ id: this.props.expense.id });\n    this.props.history.push('/');\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"page-header\">\n          <div className=\"content-container\">\n            <h1 className=\"page-header__title\">Edit Expense</h1>\n          </div>\n        </div>\n        <div className=\"content-container\">\n          <ExpenseForm\n            expense={this.props.expense}\n            onSubmit={this.onSubmit}\n          />\n          <button className=\"button button--secondary\" onClick={this.onRemove}>Remove Expense</button>\n        </div>\n      </div>\n    );\n  }\n};\n\n//Margin selelcted expense sates(descriotion, amount...) to EditExpense's props\nconst mapStateToProps = (state, props) => ({\n  expense: state.expenses.find((expense) => expense.id === props.match.params.id)\n});\nconst mapDispatchToProps = (dispatch, props) => ({\n  startEditExpense: (id, expense) => dispatch(startEditExpense(id, expense)),\n  startRemoveExpense: (data) => dispatch(startRemoveExpense(data))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(EditExpensePage);\n/*If only for connecting dispatch from redux without any other state,\nthen no need to connecting mapStateToProps*/\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst NotFoundPage=()=>(\n  <div>\n    {/* function of react router */}\n    404! - <Link to=\"/\">Go Home</Link>\n  </div>\n);\n\nexport default NotFoundPage;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {startLogin} from '../actions/auth';\n\nexport const LoginPage = ({startLogin}) =>(\n  <div className=\"box-layout\">\n    <div className='box-layout__box'>\n      <h1 className=\"box-layout__title\">Expensify</h1>\n      <p>It's time to get your expenses under control.</p>\n      <button className=\"button\" onClick={startLogin}>Login with Google</button>\n    </div>\n  </div>\n);\n\n//enabling dispatch 'startlogin' from auth, when clicking Login button of LoginPage\nconst mapDispatchToProps = (dispatch) => ({\n  startLogin: () => dispatch(startLogin())\n});\nexport default connect(undefined, mapDispatchToProps)(LoginPage);\n","import {firebase, googleAuthProvider} from '../firebase/firebase';\n\nexport const login = (uid) => ({\n  type: 'LOGIN',\n  uid\n});\n\nexport const startLogin = () => {\n  return () => {\n    return firebase.auth().signInWithPopup(googleAuthProvider);\n  };\n};\n\nexport const logout =() => ({\n  type: 'LOGOUT',\n});\n\nexport const startLogout = () => {\n  return () => {\n    return firebase.auth().signOut();\n  };\n};\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {startLogout} from '../actions/auth';\n\nexport const Header = ({startLogout}) =>(\n  <header className=\"header\">\n    {/*for NavBar, it is styled in _base_scss*/}\n    <div className=\"content-container\">\n      <div className=\"header__content\">\n        <Link className=\"header__title\" to=\"/dashboard\">\n          <h1>Expensify</h1>\n        </Link>\n        <button className=\"button button--link\" onClick={startLogout}>Logout</button>\n      </div>\n    </div>\n  </header>\n);\n\n//connect dispatch with Header\nconst mapDispatchToProps = (dispatch) => ({\n  startLogout: () => dispatch(startLogout())\n});\nexport default connect(undefined, mapDispatchToProps)(Header);\n","//Login page and main page sepertion\n\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {Route,Redirect} from 'react-router-dom';\nimport Header from '../components/Header';\n\nexport const PrivateRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n})=>(\n  <Route {...rest} component={(props)=>(\n    isAuthenticated ? (\n      <div>\n        <Header />\n        <Component {...props} />\n      </div>\n    ): (\n      <Redirect to=\"/\" />\n    )\n  )}/>\n)\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: !!state.auth.uid\n});\nexport default connect(mapStateToProps)(PrivateRoute);\n","//Login page and main page sepertion\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {Route,Redirect} from 'react-router-dom';\n\nexport const PublicRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n})=>(\n\n  <Route {...rest} component={(props) => (\n    isAuthenticated ? (\n      <Redirect to=\"/dashboard\" />\n    ): (\n      <Component {...props} />\n    )\n  )} />\n)\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: !!state.auth.uid\n});\nexport default connect(mapStateToProps)(PublicRoute);\n","import React from 'react';\nimport {Router,Route,Switch} from 'react-router-dom';\nimport createHistory from 'history/createBrowserHistory';\nimport ExpenseDashboardPage from '../components/ExpenseDashboardPage';\nimport AddExpensePage from '../components/AddExpensePage';\nimport EditExpensePage from '../components/EditExpensePage';\nimport NotFoundPage from '../components/NotFoundPage';\nimport LoginPage from '../components/LoginPage';\nimport PrivateRoute from './PrivateRoute';\nimport PublicRoute from './PublicRoute';\n\nexport const history = createHistory();\n\nconst AppRouter= () => (\n  <Router history={history}>\n    <div>\n      <Switch>\n        <PublicRoute path=\"/\" component={LoginPage} exact={true} />\n        <PrivateRoute path=\"/dashboard\" component={ExpenseDashboardPage} exact={true}/>\n        <PrivateRoute path=\"/create\" component={AddExpensePage}/>\n        {/* id is defined in typed URL and passed to the props of EditExpensePage */}\n        <PrivateRoute path=\"/edit/:id\" component={EditExpensePage}/>\n        <Route component={NotFoundPage}/>\n      </Switch>\n    </div>\n  </Router>\n);\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst LoadingPage = () => (\n  <div className=\"loader\">\n    <img className=\"loader__image\" src=\"/images/loader.gif\" />\n  </div>\n);\n\nexport default LoadingPage;\n","//Expenses Reducer\nconst expensesReducerDefaultState = [];\n\nconst expensesReducer = (state = expensesReducerDefaultState, action) => {\n  switch (action.type){\n    case 'ADD_EXPENSE':\n      return [\n        ...state,\n        action.expense\n      ];\n      case 'REMOVE_EXPENSE':\n        return state.filter(({id}) => id!==action.id);\n      case 'EDIT_EXPENSE':\n        return state.map((expense) => {\n          if(expense.id === action.id){\n            return{\n              ...expense,\n              ...action.updates //replace expense object with updates\n            }\n          }else{\n            return expense;\n          }\n        });\n    //Fetching Data from DB\n    case 'SET_EXPENSES':\n      return action.expenses;\n    default:\n      return state;\n  }\n};\n\nexport default expensesReducer;\n","import moment from 'moment';\n\n//Filters Reducer\nconst filtersReducerDefaultState = {\n  text: '',\n  sortBy: 'date', //date or amount\n  startDate: moment().startOf('month'),\n  endDate: moment().endOf('month')\n};\n\nconst filtersReducer = (state = filtersReducerDefaultState, action) => {\n  switch(action.type){\n    case 'SET_TEXT_FILTER':\n      return{\n        ...state,\n        text:action.text\n      };\n    case 'SORT_BY_AMOUNT':\n      return{\n        ...state,\n        sortBy: 'amount'\n      };\n    case 'SORT_BY_DATE':\n      return{\n        ...state,\n        sortBy: 'date'\n      };\n    case 'SET_START_DATE':\n      return{\n        ...state,\n        startDate: action.startDate\n      };\n    case 'SET_END_DATE':\n      return{\n        ...state,\n        endDate: action.endDate\n      };\n    default:\n    return state;\n  }\n};\n\nexport default filtersReducer;\n","export default (state = {},action) =>{\n  switch(action.type){\n    case 'LOGIN':\n      return{\n        uid: action.uid\n      };\n    case 'LOGOUT':\n      return {};\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport expensesReducer from '../reducers/expenses';\nimport filtersReducer from '../reducers/filters';\nimport authReducer from '../reducers/auth';\n\n//This is for redux dev tool(in CHROME)\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n//Store Creation\nexport default () => {\n  const store = createStore(\n    combineReducers({\n      expenses: expensesReducer,\n      filters: filtersReducer,\n      auth: authReducer\n    }),\n    composeEnhancers(applyMiddleware(thunk))\n  );\n  return store;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport AppRouter,{history} from './routers/AppRouter';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/styles.scss';\n\nimport {startSetExpenses} from './actions/expenses';\nimport {login, logout} from './actions/auth';\n\n//import FireBase\nimport {firebase} from './firebase/firebase';\n\nimport LoadingPage from './components/LoadingPage';\n//combining REDUX\nimport configureStore from './store/configureStore';\nconst store = configureStore();\n\n//This is for providing react props with redux created store.\n//Then, connect them like what 'ExpenseList.js' does.\nconst jsx = (\n  <Provider store={store}>\n    <AppRouter/>\n  </Provider>\n);\n\nlet hasRendered = false;\nconst renderApp = () => {\n  if(!hasRendered){\n    ReactDOM.render(jsx, document.getElementById('root'));\n    hasRendered = true;\n  }\n}\n\nReactDOM.render(<LoadingPage />, document.getElementById('root'));\n\n//login logout directiing\nfirebase.auth().onAuthStateChanged((user)=>{\n  if(user){//user will be automatically filled in if logged in, or it will be null\n    //If fectching data from DB succeeded, then render page page.\n    store.dispatch(login(user.uid));\n    store.dispatch(startSetExpenses()).then(() => {\n      renderApp();\n      //if you are in login page then\n      if(history.location.pathname === '/'){\n        history.push('/dashboard');\n      }\n    });\n  //if login fails\n  }else{\n    store.dispatch(logout());\n    renderApp();\n    history.push('/'); //direct to login page('/' defined in AppRouter.js)\n  }\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}